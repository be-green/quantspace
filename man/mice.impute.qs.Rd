% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/play_nice_with_mice.R
\name{mice.impute.qs}
\alias{mice.impute.qs}
\title{Imputation function to be used with the mice packe}
\usage{
mice.impute.qs(
  y,
  ry,
  x,
  wy = NULL,
  quantiles = c(0.1, 0.25, 0.5, 0.75, 0.9),
  baseline_quantile = 0.5,
  algorithm = "sfn",
  tails = "gaussian",
  parallel = F,
  calc_se = F,
  weights = NULL,
  control = qs_control(),
  std_err_control = se_control(),
  ...
)
}
\arguments{
\item{y}{vector to be imputed}

\item{ry}{indicator for complete cases}

\item{x}{independent variables}

\item{wy}{cases to be imputed}

\item{quantiles}{vector of quantiles to be estimated}

\item{baseline_quantile}{baseline quantile to measure spacings from (defaults to 0.5)}

\item{algorithm}{What algorithm to use for fitting underlying regressions.
Either one of "sfn", "br", "lasso", "post_lasso", or a function name which estimates
quantiles. Defaults to sfn for now.}

\item{tails}{what distribution to use when fitting the tails, either "gaussian" or "exponential"}

\item{parallel}{whether to run bootstrap in parallel}

\item{calc_se}{boolean, whether or not to calculate standard errors. Defaults to FALSE.}

\item{weights}{optional vector of weights for weighted quantile regression}

\item{control}{control parameters to pass to the control arguments of \code{\link{quantreg_spacing}},
the lower-level function called by \code{\link{qs}}. This is set via the function \code{\link{qs_control}},
which returns a named list, with elements including:
\itemize{
\item \code{trunc}: whether to truncate residual values below the argument "small"
\item \code{small}: level of "small" values to guarentee numerical stability. If not specified, set dynamically based on the standard deviation of the outcome variable.
\item \code{lambda}: For penalized regression, you can specify a level of lambda which will weight the penalty. If not set, will be determined based on 10-fold cross-validation.
\item \code{output_quantiles}: whether to save fitted quantiles as part of the function output
\item \code{calc_avg_me}: whether to return average marginal effects as part of the fitted object
\item \code{lambda}: the penalization factor to be passed to penalized regression algorithms
}}

\item{std_err_control}{control parameters to pass to the control arguments of \code{\link{quantreg_spacing}},
the lower-level function called by \code{\link{standard_errors}}. Constructed via the \code{\link{se_control}} function.
Possible arguments include:
\itemize{
\item \code{se_method}: Method to use for standard errors, either "weighted_bootstrap",
"subsample", "bootstrap" or "custom" along with a specified subsampling method and
subsample percent. If specifying "custom", must also specify \code{subsampling_percent} and
\code{draw_weights}. If you specify "subsample", subsampling percent defaults to 0.2, but can be
changed. See details for details.
\item \code{num_bs}: Number of bootstrap iterations to use, defaults to 100.
\item \code{subsample_percent}: A number between 0 and one, specifying the percent of the data to subsample for standard error calculations
\item \code{draw_weights}: Whether to use random exponential weights for bootstrap, either TRUE or FALSE
\item \code{sampling_method} One of "leaveRows", "subsampleRows", or "bootstrapRows".
leaveRows doesn't resample rows at all. subsampleRows samples without replacement
given some percentage of the data (specified via subsample_percent), and bootstrapRows
samples with replacement.`
}}

\item{...}{other arguments to be passed to quantreg_spacing}
}
\description{
Imputation function to be used with the mice packe
}
\examples{
\dontrun{
library(mice)
x <- rnorm(1000)
x[sample(1:length(x), 100)] <- NA
x <- matrix(x, ncol = 10)

# default method
mice(x, method = "qs", calc_se = F)

# lasso penalty w/ specified lambda
mice(x, method = "qs", algorithm = "lasso", calc_se = F, control = qs_control(lambda = 0.05))
}
}
