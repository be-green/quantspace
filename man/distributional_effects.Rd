% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpolate.R
\name{distributional_effects}
\alias{distributional_effects}
\alias{distributional_effects.qs}
\alias{distributional_effects.numeric}
\alias{distributional_effects.matrix}
\title{Calculate distributional effects}
\usage{
distributional_effects(fit, newdata = NULL, tails = "gaussian", ...)

\method{distributional_effects}{qs}(fit, newdata = NULL, tails = "gaussian", ...)

\method{distributional_effects}{numeric}(quantiles, alphas, tails, ...)

\method{distributional_effects}{matrix}(quantiles, alphas, tails, ...)
}
\arguments{
\item{fit}{fit of class qs}

\item{newdata}{new data to predict distributional outcomes for}

\item{tails}{one of "gaussian" or "exponential"}

\item{...}{other parameters to pass}

\item{quantiles}{fitted vector or matrix of quantiles}

\item{alphas}{which quantiles these were fitted at}
}
\description{
Calculate distributional effects
}
\details{
The arguments alphas and quantiles are automatically handled
if you pass an object of class "qs". If you don't pass new data to be
predicted on, it will assume that you want to calculate distributional
effects at the average of the data. This varies because of the non-linear
model for the quantile process
}
